{"version":3,"sources":["E:/LIM008-fe-burger-queen/src/Components/header/header.jsx","E:/LIM008-fe-burger-queen/src/Components/meseroScreen/menuBlock/menuList/breakfastMenu.jsx","E:/LIM008-fe-burger-queen/src/Components/meseroScreen/menuBlock/menuList/restOfTheDayMenu.jsx","E:/LIM008-fe-burger-queen/src/Components/meseroScreen/orderBlock/orders/orders.jsx","E:/LIM008-fe-burger-queen/src/Components/meseroScreen/orderBlock/headerOrders/headerOrders.jsx","E:/LIM008-fe-burger-queen/src/firebaseConfig.js","E:/LIM008-fe-burger-queen/src/Components/meseroScreen/menuBlock.jsx","E:/LIM008-fe-burger-queen/src/App.js","E:/LIM008-fe-burger-queen/src/serviceWorker.js","E:/LIM008-fe-burger-queen/src/index.js"],"names":["Header","react_default","a","createElement","className","BreakfastMenu","_ref","data","orders","addingItem","data-testid","map","item","categoría","key","id","type","onClick","nombre","RestOfTheDayMenu","Orders","trashOrder","setOrder","elem","newOrders","e","newElem","Object","objectSpread","cantidad","plusOne","minusOne","precio","HeaderOrders","nameInitial","setName","onSubmit","preventDefault","value","name","onChange","currentTarget","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","Waiter","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","menu","setMenu","_useState7","_useState8","setData","useEffect","collection","get","then","json","doc","forEach","docu","push","order","itemOrder","find","toConsumableArray","concat","calculateTotal","reduce","sum","header_header","breakfastMenu","restOfTheDayMenu","headerOrders_headerOrders","orderBlock_orders_orders","dataUpdate","filter","add","Nombre","Productos","Precio","Fecha","Date","App","meseroScreen_menuBlock","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c6c22650.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => (\r\n  <div className=\"container-fluid head\">\r\n    <div className=\"row justify-content-center\">\r\n      <header className=\"titlesHeader\">\r\n        <p className=\"ptitles\"> BURGER QUEEN </p>\r\n        <p className=\"ptitles\"> Reina las 24 horas</p>\r\n      </header>\r\n    </div>\r\n  </div>\r\n);\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './menuList.css';\r\n\r\nconst BreakfastMenu = ({ data, orders, addingItem }) => (\r\n  <div data-testid=\"container-breakfast\">\r\n    {data.map((item) => {\r\n      if (item.categoría === 'Desayuno') {\r\n        return (\r\n          <div key={item.id}>\r\n            <button type=\"button\" onClick={() => addingItem(item, orders)} data-testid=\"name-rest-breakfast\">{item.nombre}</button>\r\n          </div>\r\n        );\r\n      }\r\n    })}\r\n  </div>\r\n);\r\nexport default BreakfastMenu;\r\nBreakfastMenu.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  orders: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  addingItem: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './menuList.css';\r\n\r\nconst RestOfTheDayMenu = ({ data, orders, addingItem }) => (\r\n  <div data-testid=\"container-restoftheday\">\r\n    {data.map((item) => {\r\n      if (item.categoría === 'Resto del día') {\r\n        return (\r\n          <button type=\"button\" className=\"btn\" onClick={() => addingItem(item, orders)} data-testid=\"name-button-restday\">{item.nombre}</button>\r\n        );\r\n      }\r\n      return null;\r\n    })}\r\n  </div>\r\n);\r\nexport default RestOfTheDayMenu;\r\nRestOfTheDayMenu.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  orders: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  addingItem: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './orders.css';\r\n\r\nconst Orders = ({ orders, trashOrder, setOrder }) => {\r\n  const plusOne = (id) => {\r\n    const newOrders = orders.map((e) => {\r\n      if (e.id === id) {\r\n        const newElem = { ...e };\r\n        newElem.cantidad += 1;\r\n        return newElem;\r\n      }\r\n      return e;\r\n    });\r\n    setOrder(newOrders);\r\n  };\r\n  const minusOne = (elem, id) => {\r\n    const newOrders = orders.map((e) => {\r\n      if (e.id === id) {\r\n        const newElem = { ...e };\r\n        newElem.cantidad -= 1;\r\n        return newElem;\r\n      }\r\n      return e;\r\n    });\r\n    setOrder(newOrders);\r\n  };\r\n  return (orders.map(elem => (\r\n    <div key={elem.id}>\r\n      <div>\r\n        {elem.nombre}\r\n        <button type=\"button\" onClick={() => trashOrder(elem.id)}><i className=\"fas fa-trash-alt\" /></button>\r\n        <button type=\"button\" onClick={() => plusOne(elem.id)}><i className=\"fas fa-plus-circle\" /></button>\r\n        <div>{elem.cantidad}</div>\r\n        <button type=\"button\" onClick={() => minusOne(elem, elem.id)}><i className=\"fas fa-minus-circle\" /></button>\r\n        <div>{elem.cantidad * elem.precio}</div>\r\n      </div>\r\n    </div>\r\n  )));\r\n};\r\nexport default Orders;\r\nOrders.propTypes = {\r\n  orders: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  trashOrder: PropTypes.func.isRequired,\r\n  setOrder: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './headerOrders.css';\r\n\r\nconst HeaderOrders = ({ nameInitial, setName }) => (\r\n  <div className=\"container-fluid\">\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"title\">Pedidos</div>\r\n    </div>\r\n    <form onSubmit={e => e.preventDefault()}>\r\n      <div className=\"name common\">Cliente:</div>\r\n      <input className=\"common\" value={nameInitial.name} onChange={e => setName({ ...nameInitial, name: e.currentTarget.value })} data-testid=\"name-customer\" />\r\n    </form>\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-5\">Descripción</div>\r\n      <div className=\"col-3\">Cantidad</div>\r\n      <div className=\"col-4\">Precio</div>\r\n    </div>\r\n  </div>\r\n);\r\nexport default HeaderOrders;\r\nHeaderOrders.propTypes = {\r\n  nameInitial: PropTypes.string.isRequired,\r\n  setName: PropTypes.func.isRequired,\r\n};\r\n","import firebase from 'firebase';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyCZujptJoGOy65deGnZS26ZgOkSsj9GNzA',\r\n  authDomain: 'burger-queen-reactive.firebaseapp.com',\r\n  databaseURL: 'https://burger-queen-reactive.firebaseio.com',\r\n  projectId: 'burger-queen-reactive',\r\n  storageBucket: 'burger-queen-reactive.appspot.com',\r\n  messagingSenderId: '299451856705',\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from '../header/header';\r\nimport BreakfastMenu from './menuBlock/menuList/breakfastMenu';\r\nimport RestOfTheDayMenu from './menuBlock/menuList/restOfTheDayMenu';\r\nimport Orders from './orderBlock/orders/orders';\r\nimport HeaderOrders from './orderBlock/headerOrders/headerOrders';\r\nimport './menuBlock.css';\r\nimport firebase from '../../firebaseConfig';\r\n\r\nexport const db = firebase.firestore();\r\nconst Waiter = () => {\r\n  const [nameInitial, setName] = useState({ name: '' });\r\n  const [orders, setOrder] = useState([]);\r\n  const [menu, setMenu] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection('Menú').get()\r\n      .then((json) => {\r\n        const doc = [];\r\n        json.forEach((docu) => {\r\n          doc.push(docu.data());\r\n        });\r\n        setData(doc);\r\n      });\r\n  }, []);\r\n\r\n  const addingItem = (item, order) => {\r\n    const itemOrder = order.find(elem => elem.id === item.id);\r\n    return itemOrder ? setOrder([...order]) : setOrder([item, ...order]);\r\n  };\r\n\r\n  const trashOrder = (id) => {\r\n    const dataUpdate = orders.filter(order => order.id !== id);\r\n    return setOrder([...dataUpdate]);\r\n  };\r\n\r\n  const calculateTotal = (order) => {\r\n    const total = order.map(e => e.cantidad * e.precio).reduce((sum, value) => sum + value, 0);\r\n    return total;\r\n  };\r\n\r\n  const saveOrder = () => db.collection('Orders').add({\r\n    Nombre: nameInitial,\r\n    Productos: orders,\r\n    Precio: calculateTotal(orders),\r\n    Fecha: Date(),\r\n  });\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"title\">Menú</div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <button type=\"button\" className=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-1 selection\" onClick={() => setMenu(!menu)} data-testid=\"render-breakfast\">Desayuno</button>\r\n          <button type=\"button\" className=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-1 selection\" onClick={() => setMenu(!menu)}>Resto del día</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {menu ? <BreakfastMenu data={data} addingItem={addingItem} orders={orders} /> : (<RestOfTheDayMenu data={data} addingItem={addingItem} orders={orders} />)}\r\n      </div>\r\n      <HeaderOrders nameInitial={nameInitial} setName={setName} />\r\n      <Orders orders={orders} setOrder={setOrder} trashOrder={trashOrder} />\r\n      <div>\r\n        <div>Total:</div>\r\n        {calculateTotal(orders)}\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <button type=\"button\" className=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 selection\" onClick={() => setOrder([])}>Anular orden</button>\r\n          <button type=\"button\" className=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 selection\" onClick={() => saveOrder()}>Enviar a cocina</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waiter;\r\n","import React from 'react';\nimport './App.css';\nimport Waiter from './Components/meseroScreen/menuBlock';\n\nconst App = () => (\n  <div className=\"App\">\n    <div className=\"image\">\n      <Waiter />\n    </div>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
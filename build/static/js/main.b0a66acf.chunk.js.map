{"version":3,"sources":["Components/header/header.jsx","Components/meseroScreen/menuBlock/menuList/breakfastMenu.jsx","Components/meseroScreen/menuBlock/menuList/restOfTheDayMenu.jsx","Components/meseroScreen/orderBlock/orders/orders.jsx","Components/meseroScreen/orderBlock/headerOrders/headerOrders.jsx","firebaseConfig.js","Components/meseroScreen/menuBlock.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","BreakfastMenu","_ref","data","orders","addingItem","data-testid","map","item","categoría","key","id","type","concat","onClick","nombre","RestOfTheDayMenu","Orders","trashOrder","setOrder","elem","newOrders","e","newElem","Object","objectSpread","cantidad","plusOne","minusOne","precio","HeaderOrders","nameInitial","setName","value","name","onChange","currentTarget","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","Waiter","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","menu","setMenu","_useState7","_useState8","setData","useEffect","collection","get","then","json","doc","forEach","docu","push","order","itemOrder","find","toConsumableArray","calculateTotal","reduce","sum","header_header","breakfastMenu","restOfTheDayMenu","headerOrders_headerOrders","orderBlock_orders_orders","dataUpdate","filter","add","Nombre","Productos","Precio","Fecha","Date","App","meseroScreen_menuBlock","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b0a66acf.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nconst Header = () => (\n  <div className=\"container-fluid head\">\n    <div className=\"row justify-content-center\">\n      <header className=\"titlesHeader\">\n        <p className=\"ptitles\"> BURGER QUEEN </p>\n        <p className=\"ptitles\"> Reina las 24 horas</p>\n      </header>\n    </div>\n  </div>\n);\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './menuList.css';\n\nconst BreakfastMenu = ({ data, orders, addingItem }) => (\n  <div data-testid=\"container-breakfast\">\n    {data.map((item) => {\n      if (item.categoría === 'Desayuno') {\n        return (\n          <div key={item.id}>\n            <button type=\"button\" className=\"btn\" data-testid={`${item.id}-breakfast`} onClick={() => addingItem(item, orders)}>{item.nombre}</button>\n          </div>\n        );\n      }\n      return null;\n    })}\n  </div>\n);\nexport default BreakfastMenu;\nBreakfastMenu.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  orders: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addingItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './menuList.css';\n\nconst RestOfTheDayMenu = ({ data, orders, addingItem }) => (\n  <div data-testid=\"container-restoftheday\">\n    {data.map((item) => {\n      if (item.categoría === 'Resto del día') {\n        return (\n          <button key={item.id} type=\"button\" className=\"btn\" onClick={() => addingItem(item, orders)} data-testid={`${item.id}-restday`}>{item.nombre}</button>\n        );\n      }\n      return null;\n    })}\n  </div>\n);\nexport default RestOfTheDayMenu;\nRestOfTheDayMenu.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  orders: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addingItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './orders.css';\n\nconst Orders = ({ orders, trashOrder, setOrder }) => {\n  const plusOne = (id) => {\n    const newOrders = orders.map((e) => {\n      if (e.id === id) {\n        const newElem = { ...e };\n        newElem.cantidad += 1;\n        return newElem;\n      }\n      return e;\n    });\n    setOrder(newOrders);\n  };\n  const minusOne = (id) => {\n    const newOrders = orders.map((e) => {\n      if (e.id === id) {\n        const newElem = { ...e };\n        newElem.cantidad -= 1;\n        return newElem;\n      }\n      return e;\n    });\n    setOrder(newOrders);\n  };\n  return (\n    <div data-testid=\"orders-container\" className=\"all\">\n      {orders.map(elem => (\n        <div key={elem.id} className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-4 col-sm-5 col-md-5 col-lg-5 col-xl-5 common\" data-testid=\"name-order\">{elem.nombre}</div>\n            <div className=\"col-6 col-sm-5 col-md-5 col-lg-5 col-xl-5 common\">\n              <button type=\"button\" className=\"selection\" data-testid={`${elem.id}-plus`} onClick={() => plusOne(elem.id)}><i className=\"fas fa-plus-circle\" /></button>\n              <span className=\"common\">{elem.cantidad}</span>\n              <button type=\"button\" className=\"selection\" data-testid={`${elem.id}-minus`} onClick={() => minusOne(elem.id)}><i className=\"fas fa-minus-circle\" /></button>\n              <button type=\"button\" className=\"selection\" data-testid={`${elem.id}-trash`} onClick={() => trashOrder(elem.id)}><i className=\"fas fa-trash-alt\" /></button>\n            </div>\n            <div className=\"col-1 col-sm-2 col-md-2 col-lg-2 col-xl-2 common\">{elem.cantidad * elem.precio}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Orders;\nOrders.propTypes = {\n  orders: PropTypes.arrayOf(PropTypes.object).isRequired,\n  trashOrder: PropTypes.func.isRequired,\n  setOrder: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './headerOrders.css';\n\nconst HeaderOrders = ({ nameInitial, setName }) => (\n  <div className=\"container-fluid\">\n    <div className=\"row justify-content-center\">\n      <div className=\"title\">Pedidos</div>\n    </div>\n    <form>\n      <div className=\"name customer common\">Cliente:</div>\n      <input className=\"col-12 col-lg-8 col-xl-6 common\" value={nameInitial.name} onChange={e => setName({ ...nameInitial, name: e.currentTarget.value })} data-testid=\"name-customer\" />\n    </form>\n    <div className=\"row justify-content-center\">\n      <div className=\"col-4 col-sm-4 col-md-5 col-lg-5 col-xl-5 common\">Descripción</div>\n      <div className=\"col-6 col-sm-5 col-md-5 col-lg-5 col-xl-5 common\">Cantidad</div>\n      <div className=\"col-2 col-sm-3 col-md-2 col-lg-2 col-xl-2 common\">Precio</div>\n    </div>\n  </div>\n);\nexport default HeaderOrders;\nHeaderOrders.propTypes = {\n  nameInitial: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n};\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyCZujptJoGOy65deGnZS26ZgOkSsj9GNzA',\n  authDomain: 'burger-queen-reactive.firebaseapp.com',\n  databaseURL: 'https://burger-queen-reactive.firebaseio.com',\n  projectId: 'burger-queen-reactive',\n  storageBucket: 'burger-queen-reactive.appspot.com',\n  messagingSenderId: '299451856705',\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport Header from '../header/header';\nimport BreakfastMenu from './menuBlock/menuList/breakfastMenu';\nimport RestOfTheDayMenu from './menuBlock/menuList/restOfTheDayMenu';\nimport Orders from './orderBlock/orders/orders';\nimport HeaderOrders from './orderBlock/headerOrders/headerOrders';\nimport './menuBlock.css';\nimport firebase from '../../firebaseConfig';\n\nexport const db = firebase.firestore();\nconst Waiter = () => {\n  const [nameInitial, setName] = useState({ name: '' });\n  const [orders, setOrder] = useState([]);\n  const [menu, setMenu] = useState(false);\n  const [data, setData] = useState([]);\n  // firebase.firestore().enablePersistence()\n  // .then(function() {\n  // Initialize Cloud Firestore through firebase\n  // const db = firebase.firestore();\n  useEffect(() => {\n    db.collection('Menú').get()\n      .then((json) => {\n        const doc = [];\n        json.forEach((docu) => {\n          doc.push(docu.data());\n        });\n        setData(doc);\n      });\n  }, []);\n  // });\n  const addingItem = (item, order) => {\n    const itemOrder = order.find(elem => elem.id === item.id);\n    return itemOrder ? setOrder([...order]) : setOrder([item, ...order]);\n  };\n\n  const trashOrder = (id) => {\n    const dataUpdate = orders.filter(order => order.id !== id);\n    return setOrder([...dataUpdate]);\n  };\n\n  const calculateTotal = (order) => {\n    const total = order.map(e => e.cantidad * e.precio).reduce((sum, value) => sum + value, 0);\n    return total;\n  };\n\n  const saveOrder = () => db.collection('Orders').add({\n    Nombre: nameInitial,\n    Productos: orders,\n    Precio: calculateTotal(orders),\n    Fecha: Date(),\n  });\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <div className=\"first block portrait\">\n          <div className=\"row justify-content-center\">\n            <div className=\"title\">Menú</div>\n          </div>\n          <div className=\"row justify-content-center\">\n            <button type=\"button\" className=\"col-6 col-sm-4 col-md-3 col-lg-3 col-xl-2 selection\" onClick={() => setMenu(!menu)} data-testid=\"render-breakfast\">Desayuno</button>\n            <button type=\"button\" className=\"col-6 col-sm-4 col-md-3 col-lg-3 col-xl-2 selection\" onClick={() => setMenu(!menu)} data-testid=\"render-restday\">Resto del día</button>\n          </div>\n          <div>\n            {menu ? <BreakfastMenu data={data} addingItem={addingItem} orders={orders} /> : (<RestOfTheDayMenu data={data} addingItem={addingItem} orders={orders} />)}\n          </div>\n        </div>\n        <div className=\"second block\">\n          <HeaderOrders nameInitial={nameInitial} setName={setName} />\n          <Orders orders={orders} setOrder={setOrder} trashOrder={trashOrder} />\n          <div className=\"common selection\">\n            <div className=\"common\">Total:</div>\n            <div className=\"common\" data-testid=\"total-id\">{calculateTotal(orders)}</div>\n          </div>\n          <div className=\"container-fluid\">\n            <div className=\"row justify-content-center\">\n              <button type=\"button\" className=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 selection\" onClick={() => setOrder([])} data-testid=\"delete-order\">Anular orden</button>\n              <button type=\"button\" className=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 selection\" onClick={() => saveOrder()} data-testid=\"save-order\">Enviar a cocina</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  // })\n};\nexport default Waiter;\n","import React from 'react';\nimport './App.css';\nimport Waiter from './Components/meseroScreen/menuBlock';\n\nconst App = () => (\n  <div className=\"App\">\n    <div className=\"image\">\n      <Waiter />\n    </div>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}